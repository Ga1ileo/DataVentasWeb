// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DataVentasWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using DataVentasWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using DataVentasWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/miguelgondres/Projects/DataVentasWeb/_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/miguelgondres/Projects/DataVentasWeb/Pages/Index.razor"
using DataVentasWeb.BLL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/miguelgondres/Projects/DataVentasWeb/Pages/Index.razor"
using DataVentasWeb.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/miguelgondres/Projects/DataVentasWeb/Pages/Index.razor"
using System.Timers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/miguelgondres/Projects/DataVentasWeb/Pages/Index.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/game")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 76 "/Users/miguelgondres/Projects/DataVentasWeb/Pages/Index.razor"
      

    [Inject]
    public JugadoresBLL JugadoresBLL { get; set; }
    public Jugadores jugador { get; set; } = new Jugadores();

    async Task Guardar()
    {
        bool guardado;

        if (jugador.Nombre == null)
        {
            toast.ShowError("Please fill username and message and you need to PLAY");
        }
        else if (jugador.Mensaje == null)
        {
            toast.ShowError("Please fill username and message and you need to PLAY");
        }
        else if (jugador.Tiempo == null)
        {
            toast.ShowError("Please fill username and message and you need to PLAY");
        }
        else
        {
            guardado = await JugadoresBLL.Guardar(jugador);
            if (guardado)
            {
                SetupGame();
                toast.ShowSuccess("Guardado");
            }
            else
                toast.ShowError("Error al guardar");
        }



    }


    List<string> animalEmoji = new List<string>()
{
        "🐶","🐶",
        "🐺","🐺",
        "🐮","🐮",
        "🦊","🦊",
        "🐱","🐱",
        "🦁","🦁",
        "🐯","🐯",
        "🐹","🐹",
        "🐝","🐝",
        "🐢","🐢",
    };


    List<string> shuffledAnimals = new List<string>();
    int matchesFound = 0;
    Timer timer;
    int tenthsOfSecoundsElapsed = 0;
    string timeDisplay;
    string nombre = string.Empty;
    string tiempo;


    protected override void OnInitialized()
    {

        timer = new Timer(100);
        timer.Elapsed += Timer_Trick;
        tiempo = string.Empty;
        SetupGame();
    }

    private void SetupGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
        matchesFound = 0;
        tenthsOfSecoundsElapsed = 0;
        jugador.Tiempo = timeDisplay;
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            //First selection of the pair. Remenber it.
            lastAnimalFound = animal;
            lastDescription = animalDescription;
            timer.Start();
        }
        else if ((animalDescription != lastDescription) && (lastAnimalFound == animal))
        {
            //match found! reset for next pair.
            lastAnimalFound = string.Empty;

            //Replace found animals with empty string to hid then
            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
            matchesFound++;
            if (matchesFound == 10)
            {
                timer.Stop();
                timeDisplay += " ";
                tiempo = timeDisplay;
                SetupGame();
            }

        }
        else
        {
            //user selected a pair that dont match.
            //reset selection
            lastAnimalFound = string.Empty;
        }
    }

    private void Timer_Trick(Object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecoundsElapsed++;
            timeDisplay = (tenthsOfSecoundsElapsed / 10F)
            .ToString("0.0s");
            StateHasChanged();
        });

        getTime(timeDisplay);
    }

    public void getTime(string t)
    {
        t = jugador.Tiempo;
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toast { get; set; }
    }
}
#pragma warning restore 1591
